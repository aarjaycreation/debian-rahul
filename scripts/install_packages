#!/bin/bash

# Define colors for output
GREEN="\033[1;32m"
RED="\033[1;31m"
YELLOW="\033[1;33m"
NC="\033[0m" # No Color

# Function to check if a command exists
command_exists() {
    command -v "$1" > /dev/null 2>&1
}

# Function to install Nala
install_nala() {
    echo -e "${YELLOW}Attempting to install nala...${NC}"
    if ./install_nala; then
        echo -e "${GREEN}Nala installed successfully.${NC}"
    else
        echo -e "${RED}Failed to install nala. Falling back to apt.${NC}"
    fi
}

# Install Nala if not present
if ! command_exists nala; then
    install_nala
fi

# Install dependencies
echo -e "${YELLOW}Installing dependencies...${NC}"

# List of main packages
packages=(
    "xorg-dev"
    # "sxhkd"
    # "ranger"
    "gcc"
    "make"
    "libx11-dev"
    "libxft-dev"
    "libxinerama-dev"
    "libimlib2-dev" 
    "libxcb-res0-dev"
    "mate-polkit"
    "libx11-xcb-dev" 
    "libfontconfig1"
    "libx11-6"
    "libxft2"
    "libxinerama1"
)

# Function to read and append common packages from a file
read_common_packages() {
    local common_file="$1"
    if [ -f "$common_file" ]; then
        while IFS= read -r pkg; do
            # Ignore empty lines and comments
            [[ -z "$pkg" || "$pkg" =~ ^# ]] && continue
            packages+=("$pkg")
        done < "$common_file"
    else
        echo -e "${RED}Common packages file not found: $common_file${NC}"
    fi
}

# Function to install packages if they are not already installed
install_packages() {
    local pkgs=("$@")
    local missing_pkgs=()

    # Check if each package is installed
    for pkg in "${pkgs[@]}"; do
        if ! dpkg -l | grep -qw "$pkg"; then
            missing_pkgs+=("$pkg")
        fi
    done

    # Install missing packages
    if [ ${#missing_pkgs[@]} -gt 0 ]; then
        echo -e "${YELLOW}Installing missing packages: ${missing_pkgs[@]}${NC}"
        if command_exists nala; then
            sudo nala update && sudo nala install -y "${missing_pkgs[@]}"
        else
            sudo apt update && sudo apt install -y "${missing_pkgs[@]}"
        fi
        if [ $? -ne 0 ]; then
            echo -e "${RED}Failed to install some packages.${NC}"
            return 1
        fi
    else
        echo -e "${GREEN}All required packages are already installed.${NC}"
    fi
}

# Define the file path for common packages
common_packages_file="$HOME/debian-rahul/scripts/common_packages.txt"

# Read additional packages from the file
read_common_packages "$common_packages_file"

# Install all the required packages
install_packages "${packages[@]}"

# Function to enable services
enable_services() {
    echo -e "${YELLOW}Enabling services...${NC}"
    sudo systemctl enable avahi-daemon
    sudo systemctl enable acpid
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}Services enabled successfully.${NC}"
    else
        echo -e "${RED}Failed to enable services.${NC}"
    fi
}

enable_services

# Function to update user directories
update_user_dirs() {
    xdg-user-dirs-update
    mkdir -p "$HOME/Screenshots"
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}User directories updated successfully.${NC}"
    else
        echo -e "${RED}Failed to update user directories.${NC}"
    fi
}

update_user_dirs

# Function to ensure /usr/share/xsessions directory exists
ensure_xsessions_dir() {
    if [ ! -d /usr/share/xsessions ]; then
        echo -e "${YELLOW}Creating /usr/share/xsessions directory...${NC}"
        sudo mkdir -p /usr/share/xsessions
        if [ $? -ne 0 ]; then
            echo -e "${RED}Failed to create /usr/share/xsessions directory. Exiting.${NC}"
            exit 1
        else
            echo -e "${GREEN}/usr/share/xsessions directory created successfully.${NC}"
        fi
    fi
}

ensure_xsessions_dir


